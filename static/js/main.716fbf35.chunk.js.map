{"version":3,"sources":["assets/flag.png","assets/black-timer.png","assets/bomb.png","components/Button.js","components/FlagsRemaining.js","components/Timer.js","components/NavBar.js","components/Cell.js","components/Endscreen.js","components/Board.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","level","active","setColor","backgroundColor","className","style","value","toLowerCase","onClick","e","preventDefault","clicked","FlagsRemaining","numFlagged","src","require","alt","Timer","useState","time","setTime","useEffect","intervalId","setInterval","prevState","clearInterval","freezeTime","gameNum","NavBar","easy","hard","buttonStates","setButtonStates","frozenTime","setFrozenTime","handleButtonClick","changeSize","paused","Cell","location","row","cellData","column","state","mine","count","difficulty","sizeClass","setSizeClass","handleLeftClick","leftClick","handleRightClick","rightClick","onContextMenu","Endscreen","gameEnded","ended","setEnded","message","setMessage","handleClick","exploded","displayEndScreen","Board","uncovered","setUncovered","setExploded","numMarked","setNumMarked","boardDifficulty","mines","numMines","setNumMines","board","setBoard","done","setDone","numRows","rows","numCols","columns","countFunc","r","c","res","dr","dc","validCoord","rndInt","min","max","Math","ceil","floor","random","uncover","temp_board","allowed","abs","push","length","i","j","sprinkleMines","ff","mark","setMarked","status","col","cell_row","createBoard","map","cell","type","Game","setDifficulty","setNumFlagged","setGameNum","setPaused","handleSizeChange","num","isPaused","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.716fbf35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag.cd7d616b.png\";","module.exports = __webpack_public_path__ + \"static/media/black-timer.b568de26.png\";","module.exports = __webpack_public_path__ + \"static/media/bomb.5289fb67.png\";","import React from \"react\";\r\nimport \"../style/Button.css\"\r\n\r\nexport default function Button(props) {\r\n    const level = props.level\r\n    const active = props.active\r\n\r\n    const setColor = () => {\r\n        if (active) {\r\n            return {backgroundColor: \"var(--dark_purple)\"}\r\n        } else {\r\n            return {backgroundColor: \"var(--black)\"}\r\n        }\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        if (!active) {\r\n            setColor(active)\r\n            props.clicked(level.toLowerCase())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className={\"level-button\"} style={setColor(active)} value={level.toLowerCase()} onClick={handleClick}>\r\n                {level}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"../style/FlagsRemaining.css\"\r\n\r\nexport default function FlagsRemaining(props) {\r\n\r\n    const numFlagged = props.numFlagged\r\n\r\n    return (\r\n        <div className={\"flags-remaining-div\"}>\r\n            <img className={\"flag-img\"} src={require(\"../assets/flag.png\")} alt={\"flag\"}/>\r\n            <p>{numFlagged}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"../style/Timer.css\"\r\n\r\nexport default function Timer(props) {\r\n    const [time, setTime] = useState(0)\r\n\r\n    useEffect(() => {\r\n            const intervalId = setInterval(() => {\r\n                setTime((prevState) => prevState + 1)\r\n            }, 1000)\r\n\r\n            return () => {\r\n                clearInterval(intervalId)\r\n            }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.freezeTime(time)\r\n    }, [time])\r\n\r\n    useEffect(() => {\r\n        setTime(0)\r\n    }, [props.gameNum])\r\n\r\n    return (\r\n        <div>\r\n            <p>{time}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"../style/Navbar.css\"\r\nimport Button from \"./Button\";\r\nimport FlagsRemaining from \"./FlagsRemaining\";\r\nimport Timer from \"./Timer\";\r\n\r\nexport default function NavBar(props) {\r\n\r\n    const [buttonStates, setButtonStates] = useState({\r\n        easy: true,\r\n        hard: false\r\n    })\r\n\r\n    const [frozenTime, setFrozenTime] = useState(0)\r\n    const numFlagged = props.numFlagged\r\n\r\n    const toggleLevel = () => {\r\n        setButtonStates(prevState => ({\r\n            easy: !prevState.easy,\r\n            hard: !prevState.hard\r\n        }))\r\n    }\r\n\r\n    const handleButtonClick = (level) => {\r\n        props.changeSize(level)\r\n    }\r\n\r\n    const freezeTime = (time) => {\r\n        setFrozenTime(time)\r\n    }\r\n\r\n    const startTimer = () => {\r\n        if (props.paused) {\r\n            return <p className={\"inline-num\"}>{frozenTime}</p>\r\n        } else {\r\n            return <Timer gameNum={props.gameNum} paused={props.paused} freezeTime={freezeTime}/>\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.gameNum !== 0) {\r\n            toggleLevel()\r\n            setFrozenTime(0)\r\n        }\r\n    }, [props.gameNum])\r\n\r\n    return(\r\n        <div className={\"navbar-div\"}>\r\n            <div className={\"container\"}>\r\n                <div className={\"timer-div\"}>\r\n                    <img className={\"timer\"} src={require(\"../assets/black-timer.png\")} alt={\"timer\"}/>\r\n                    {startTimer()}\r\n                </div>\r\n                <FlagsRemaining numFlagged={numFlagged}/>\r\n            </div>\r\n\r\n            <div className={\"title-div\"}>\r\n                <p>MINESWEEPER</p>\r\n            </div>\r\n\r\n            <form className={\"button-form\"}>\r\n                <Button level={\"Easy\"} active={buttonStates.easy} clicked={handleButtonClick}/>\r\n                <Button level={\"Hard\"} active={buttonStates.hard} clicked={handleButtonClick}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"../style/Cell.css\"\r\n\r\nexport default function Cell(props) {\r\n    const location = {\r\n        row: props.cellData.row,\r\n        column: props.cellData.column\r\n    }\r\n    const state = props.cellData.state\r\n    const mine = props.cellData.mine\r\n    const count = props.cellData.count\r\n\r\n    const [sizeClass, setSizeClass] = useState(props.difficulty)\r\n\r\n    const handleLeftClick= () => {\r\n        props.leftClick(location.row, location.column)\r\n    }\r\n\r\n    const handleRightClick = (e) => {\r\n        e.preventDefault()\r\n        props.rightClick(location.row, location.column)\r\n\r\n    }\r\n\r\n    const showCells = () => {\r\n        if (state === \"hidden\") {\r\n            return <div className={\"cell hidden \" + sizeClass} onClick={handleLeftClick} onContextMenu={handleRightClick}/>\r\n        }\r\n        else if (state === \"shown\") {\r\n            if (count === 0) {\r\n                return <div className={\"cell shown-zero \" + sizeClass}/>\r\n            }\r\n            else if (mine === true) {\r\n                return (\r\n                    <div className={\"cell bomb \" + sizeClass}>\r\n                        <img className={\"image\"} src={require(\"../assets/bomb.png\")} alt={\"mine\"}/>\r\n                    </div>\r\n                )\r\n            }\r\n            else { // count != 0 and not mine\r\n                return (\r\n                    <div className={\"cell shown-number \" + sizeClass}>\r\n                        <p>{count}</p>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else if (state === \"marked\") {\r\n            return (\r\n                <div className={\"cell hidden \" + sizeClass} onContextMenu={handleRightClick}>\r\n                    <img className={\"image\"} src={require(\"../assets/flag.png\")} alt={\"flag\"}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSizeClass(props.difficulty)\r\n    }, [props.difficulty])\r\n\r\n    return (\r\n        <div>\r\n            {showCells()}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"../style/Endscreen.css\"\r\nimport Button from \"./Button\";\r\n\r\nexport default function Endscreen (props) {\r\n    const [ended, setEnded] = useState(props.gameEnded)\r\n    const [message, setMessage] = useState(\"YOU WON\")\r\n\r\n    const handleClick = (level) => {\r\n        setEnded(false)\r\n        props.changeSize(level)\r\n    }\r\n\r\n    const displayEndScreen = () => {\r\n        if (ended) {\r\n            return(\r\n                <div className={\"endscreen\"}>\r\n                    <p className={\"title\"}>{message}</p>\r\n                    <p>Try Again?</p>\r\n                    <div className={\"button-div\"}>\r\n                        <Button level={\"Easy\"} active={false} clicked={handleClick}/>\r\n                        <Button level={\"Hard\"} active={false} clicked={handleClick}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n      setEnded(props.gameEnded)\r\n    }, [props.gameEnded])\r\n\r\n    useEffect(() => {\r\n        if (props.exploded) {\r\n            setMessage(\"YOU LOST\")\r\n        } else {\r\n            setMessage(\"YOU WON\")\r\n        }\r\n    }, [props.exploded])\r\n\r\n    return (\r\n        <div>\r\n            {displayEndScreen()}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport \"../style/Board.css\"\r\nimport Cell from \"./Cell\";\r\nimport Endscreen from \"./Endscreen\";\r\n\r\nexport default function Board(props) {\r\n\r\n    const [uncovered, setUncovered] = useState(0)\r\n    const [exploded, setExploded] = useState(false)\r\n    const [numMarked, setNumMarked] = useState(0)\r\n    const [numMines, setNumMines] = useState(props.boardDifficulty.mines)\r\n    const [board, setBoard] = useState([])\r\n    const [done, setDone] = useState(false)\r\n\r\n    const numRows = props.boardDifficulty.rows\r\n    const numCols = props.boardDifficulty.columns\r\n\r\n    const createBoard = () => {\r\n        let temp_board = []\r\n        for (let i=0; i<numRows; i++) {\r\n            let cell_row = []\r\n            for (let j=0; j<numCols; j++) {\r\n                cell_row.push({\r\n                    row: i,\r\n                    column: j,\r\n                    mine: false,\r\n                    state: \"hidden\",\r\n                    count: 0\r\n                })\r\n            }\r\n            temp_board.push(cell_row)\r\n        }\r\n        return temp_board\r\n    }\r\n\r\n    const countFunc = (row, column) => {\r\n        const c = (r,c) => (validCoord(r,c) && board[r][c].mine ? 1 : 0)\r\n        let res = 0\r\n        for (let dr=-1; dr <= 1; dr++) {\r\n            for (let dc=-1; dc <= 1; dc++) {\r\n                res += c(row+dr, column+dc)\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    const rndInt = (min, max) => {\r\n        [min,max] = [Math.ceil(min), Math.floor(max)]\r\n        return  min + Math.floor(Math.random() * (max - min + 1))\r\n    }\r\n\r\n    const sprinkleMines = (row, column) => {\r\n        let temp_board = board\r\n        props.paused(false)\r\n        let allowed = []\r\n        for (let r=0; r<numRows; r++) {\r\n            for (let c=0; c<numCols; c++) {\r\n                if (Math.abs(row-r) > 2 || Math.abs(column-c) > 2) {\r\n                    allowed.push([r,c])\r\n                }\r\n            }\r\n        }\r\n\r\n        setNumMines(Math.min(numMines, allowed.length))\r\n\r\n        for (let i=0; i<numMines; i++) {\r\n            let j = rndInt(i, allowed.length-1);\r\n            [allowed[i], allowed[j]] = [allowed[j], allowed[i]]\r\n            let [r,c] = allowed[i];\r\n            temp_board[r][c].mine = true\r\n        }\r\n\r\n        for (let r=0; r<numRows; r++) {\r\n            for (let c = 0; c < numCols; c++) {\r\n                if (temp_board[r][c].state === \"marked\") {\r\n                    temp_board[r][c].state = \"hidden\"\r\n                }\r\n                temp_board[r][c].count = countFunc(r, c)\r\n            }\r\n        }\r\n        setBoard(temp_board)\r\n    }\r\n\r\n    const validCoord = (row, column) => {\r\n        return row >=0 && row < numRows && column >= 0 && column < numCols\r\n    }\r\n\r\n    const uncover = (row, column) => {\r\n        let temp_board = board\r\n\r\n        if (uncovered === 0) {\r\n            sprinkleMines(row, column)\r\n        }\r\n\r\n        if (temp_board[row][column].state !== \"hidden\") {return false}\r\n\r\n        const ff = (r, c) => {\r\n            if (!validCoord(r, c)) {return}\r\n            if (temp_board[r][c].state !== \"hidden\") {return}\r\n            temp_board[r][c].state = \"shown\"\r\n            setUncovered((prevState) => (prevState + 1))\r\n            if (temp_board[r][c].count !== 0) {return}\r\n            ff(r-1, c-1);ff(r-1,c);ff(r-1,c+1)\r\n            ff(r,c-1);ff(r,c+1);\r\n            ff(r+1, c-1);ff(r+1,c);ff(r+1,c+1)\r\n        }\r\n        ff(row, column)\r\n\r\n        if (temp_board[row][column].mine) {\r\n            setExploded(true)\r\n        }\r\n        setBoard(temp_board)\r\n        return true\r\n    }\r\n\r\n    const mark = (row, column) => {\r\n        let temp_board = board\r\n        if (!validCoord(row, column)) {return false}\r\n        if (temp_board[row][column].state === \"shown\") {return false}\r\n        if (temp_board[row][column].state === \"marked\") {\r\n            setNumMarked(prevState => (prevState-1))\r\n        } else {\r\n            setNumMarked(prevState => (prevState+1))\r\n        }\r\n        temp_board[row][column].state = temp_board[row][column].state === \"marked\" ? \"hidden\" : \"marked\"\r\n        setBoard(temp_board)\r\n        return true\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.setMarked(numMines-numMarked)\r\n    },[numMarked])\r\n\r\n    useEffect(() => {\r\n        const status = exploded || uncovered === numRows * numCols - numMines\r\n        if (status) {\r\n            props.paused(true)\r\n            setDone(status)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (exploded === true) {\r\n            let temp_board = board\r\n            for (let row=0; row < numRows; row++) {\r\n                for (let col=0; col < numCols; col++) {\r\n                    if (temp_board[row][col].mine === true) {\r\n                        temp_board[row][col].state = \"shown\"\r\n                    }\r\n                }\r\n            }\r\n            setBoard(temp_board)\r\n        }\r\n    }, [exploded])\r\n\r\n    useEffect(() => {\r\n        setUncovered(0)\r\n        setExploded(false)\r\n        setNumMarked(0)\r\n        setNumMines(props.boardDifficulty.mines)\r\n        setBoard(createBoard())\r\n        setDone(false)\r\n    }, [props.gameNum])\r\n\r\n\r\n    return(\r\n        <div className={\"board\"}>\r\n            {board.map(row =>\r\n                <div className={\"row\"}>\r\n                    {row.map(cell =>\r\n                        <Cell cellData={cell} leftClick={uncover} rightClick={mark} difficulty={props.boardDifficulty.type}/>\r\n                    )}\r\n                </div>\r\n            )}\r\n            <Endscreen gameEnded={done} exploded={exploded} changeSize={props.changeSize}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"../style/Game.css\"\r\nimport NavBar from \"./NavBar\";\r\nimport Board from \"./Board\";\r\n\r\nexport default function Game() {\r\n    const easy = {\r\n        type: \"easy\",\r\n        rows: 10,\r\n        columns: 10,\r\n        mines: 10\r\n    }\r\n    const hard = {\r\n        type: \"hard\",\r\n        rows: 16,\r\n        columns: 16,\r\n        mines: 40\r\n    }\r\n\r\n    const [difficulty, setDifficulty] = useState(easy)\r\n    const [numFlagged, setNumFlagged] = useState(difficulty.mines)\r\n    const [gameNum, setGameNum] = useState(0)\r\n    const [paused, setPaused] = useState(true)\r\n\r\n    const handleSizeChange = (level) => {\r\n        if (level === \"easy\") {\r\n            setDifficulty(easy)\r\n        } else {\r\n            setDifficulty(hard)\r\n        }\r\n        setPaused(true)\r\n        setGameNum(prevState => prevState + 1)\r\n    }\r\n\r\n    const marked = (num) => {\r\n        setNumFlagged(num)\r\n    }\r\n\r\n    const pausedFunc = (isPaused) => {\r\n        setPaused(isPaused)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNumFlagged(difficulty.mines)\r\n    }, [difficulty])\r\n\r\n    return(\r\n        <div className={\"game-div\"}>\r\n            <NavBar changeSize={handleSizeChange} numFlagged={numFlagged} gameNum={gameNum} paused={paused}/>\r\n            <div className={\"board-div\"}>\r\n                <Board boardDifficulty={difficulty} setMarked={marked} changeSize={handleSizeChange} gameNum={gameNum} paused={pausedFunc}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Game from './components/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}